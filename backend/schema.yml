openapi: 3.0.3
info:
  title: Job Hunter API Project
  version: 1.0.0
  description: A sample Job follow up app for users
paths:
  /api/v1/accountslogin/:
    post:
      operationId: api_v1_accountslogin_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/accountsregister/:
    post:
      operationId: api_v1_accountsregister_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/accountsusers/:
    get:
      operationId: api_v1_accountsusers_list
      tags:
      - api
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/accountsusers/update_profile/:
    patch:
      operationId: api_v1_accountsusers_update_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegister'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/jobs/:
    get:
      operationId: api_v1_jobs_list
      tags:
      - api
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
    post:
      operationId: api_v1_jobs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/v1/jobs/{id}/:
    get:
      operationId: api_v1_jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: api_v1_jobs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: api_v1_jobs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: api_v1_jobs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /api/v1/jobs/stats/:
    get:
      operationId: api_v1_jobs_stats_retrieve
      description: Return statistics about job statuses
      tags:
      - api
      security:
      - knoxApiToken: []
      responses:
        '200':
          description: No response body
  /api/v1/password_reset/:
    post:
      operationId: api_v1_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/password_reset/confirm/:
    post:
      operationId: api_v1_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/v1/password_reset/validate_token/:
    post:
      operationId: api_v1_password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
components:
  schemas:
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: string
          description: Please provide company
          maxLength: 50
        position:
          type: string
          description: Please provide position
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        job_location:
          type: string
          description: Job location
          maxLength: 255
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
      required:
      - company
      - created_at
      - id
      - position
    JobTypeEnum:
      enum:
      - full-time
      - part-time
      - remote
      - internship
      type: string
      description: |-
        * `full-time` - Full-time
        * `part-time` - Part-time
        * `remote` - Remote
        * `internship` - Internship
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: string
          description: Please provide company
          maxLength: 50
        position:
          type: string
          description: Please provide position
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        job_location:
          type: string
          description: Job location
          maxLength: 255
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
    PatchedRegister:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 200
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        user_location:
          type: string
          nullable: true
          title: Location
          maxLength: 50
    Register:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 200
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        user_location:
          type: string
          nullable: true
          title: Location
          maxLength: 50
      required:
      - email
      - first_name
      - id
      - last_name
      - password
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    StatusEnum:
      enum:
      - interview
      - declined
      - pending
      type: string
      description: |-
        * `interview` - Interview
        * `declined` - Declined
        * `pending` - Pending
  securitySchemes:
    knoxApiToken:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
